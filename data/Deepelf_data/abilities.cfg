#textdomain wesnoth-Ageless_Era

#define AE_DEP_SPECIAL_NOTES_HUNTER
_"This unit is a hunter. Whenever it kills another unit, it deals more damage against units of the defeated unit's race."#enddef

#define AE_DEP_SPECIAL_NOTES_TRAMPLE
_"This unit is able to overrun an enemy. Whenever it attacks, it moves across the field of the defending unit."#enddef

#define AE_DEP_SPECIAL_NOTES_SPURT
_"This unit is able to move again after a nightly attack."#enddef

#define AE_DEP_SPECIAL_NOTES_LITHIC_IDOL
_"This unit turns to stone at day. It then regenerates +10 hitpoints per turn."#enddef

#define AE_DEP_SPECIAL_NOTES_STARDUST
_"When used in defense, this unit reduces the attacker's number of strikes by 1."#enddef

#define AE_DEP_WEAPON_SPECIAL_STARDUST
    [attacks]
        id=AE_dep_stardust
        name= _ "stardust"
        special_note={AE_DEP_SPECIAL_NOTES_STARDUST}
        description= _ "When used in defense, this attacks reduces the attacker's number of strikes by 1."
        sub=1
        active_on=defense
        apply_to=attacker
    [/attacks]
#enddef

# wmllint: unbalanced-on
#define AE_DEP_WEAPON_SPECIAL_TRAMPLE
    [attacks]
        id=AE_dep_trample
        name= _ "trample"
        description= _ "This unit ignores the retaliation of the enemy and just overruns it."
        value=0
        apply_to=opponent
        special_note={AE_DEP_SPECIAL_NOTES_TRAMPLE}
    [/attacks]
[/specials]
[/attack]

[event]
    name=attack_end
    first_time_only=no
    id=AE_dep_trample_event

    [filter_attack]
        special=AE_dep_trample
    [/filter_attack]

    [store_locations]
        [not]
            [filter]
            [/filter]
        [/not]

        [filter_adjacent_location]
            x,y=$x2,$y2
            adjacent=-$unit.facing
        [/filter_adjacent_location]

        variable=trample_target_hex
    [/store_locations]

    [if]
        [variable]
            name=trample_target_hex.length
            greater_than=0
        [/variable]

        [then]
            [teleport]
                [filter]
                    x,y=$x1,$y1
                [/filter]
                animate=no

                x,y=$trample_target_hex.x,$trample_target_hex.y
                check_passability=yes
                clear_shroud=yes
            [/teleport]
            [AE_give_fight_xp]
                attacker=unit
                defender=second_unit
                attacker_xp=yes
                defender_xp=no
            [/AE_give_fight_xp]

            [capture_village]
                x,y=$trample_target_hex.x,$trample_target_hex.y
                side=$unit.side
            [/capture_village]
            [redraw]
            [/redraw]
        [/then]
    [/if]

    {CLEAR_VARIABLE trample_direction,trample_target_hex}
[/event]

[+attack]
    [+specials]
#enddef
# wmllint: unbalanced-off

# wmllint: unbalanced-on
#define AE_DEP_ABILITY_SPURT
    [dummy]
        id=AE_dep_spurt
        name= _ "spurt"
        special_note={AE_DEP_SPECIAL_NOTES_SPURT}
        description= _ "This unit regains 2 movement points after an attack. Only works at night."
    [/dummy]
[/abilities]

[event]
    name=attack_end
    first_time_only=no
    id=AE_dep_spurt_event

    [filter]
        ability=AE_dep_spurt
    [/filter]

    [store_time_of_day]
        x,y=$x1,$y1
    [/store_time_of_day]

    [if]
        [variable]
            name=time_of_day.lawful_bonus
            less_than=0
        [/variable]
        [then]
            [unstore_unit]
                variable=unit
                {COLOR_HARM}
                text= _ "Spurt!"
                find_vacant=no
            [/unstore_unit]

            [heal_unit]
                [filter]
                    x,y=$x1,$y1
                [/filter]
                amount=0
                moves=2
                animate=no
                restore_attacks=no
            [/heal_unit]
        [/then]
    [/if]
[/event]

[+abilities]
#enddef
# wmllint: unbalanced-off

# wmllint: unbalanced-on
#define AE_DEP_ABILITY_LITHIC_IDOL
    [dummy]
        id=AE_dep_idol_of_stone
        name= _"Lithic Idol"
        special_note={AE_DEP_SPECIAL_NOTES_LITHIC_IDOL}
        description= _"This unit turns to stone at day. It then regenerates +10 hitpoints per turn."
    [/dummy]
[/abilities]

[event]
    name=prerecruit
    first_time_only=no
    id=AE_dep_idol_of_stone_prerecruit

    [filter]
        ability=AE_dep_idol_of_stone
    [/filter]

    [store_time_of_day]
    [/store_time_of_day]

    [if]
        [variable]
            name=time_of_day.lawful_bonus
            less_than_equal_to=0
        [/variable]
        [then]
            [unpetrify]
                ability=AE_dep_idol_of_stone
            [/unpetrify]
        [/then]
        [else]
            [petrify]
                ability=AE_dep_idol_of_stone
            [/petrify]
        [/else]
    [/if]
[/event]

[event]
    name=turn refresh
    first_time_only=no
    id=AE_dep_idol_of_stone_turn_refresh

    [store_time_of_day]
    [/store_time_of_day]

    [if]
        [variable]
            name=time_of_day.lawful_bonus
            less_than_equal_to=0
        [/variable]
        [then]
            [unpetrify]
                ability=AE_dep_idol_of_stone
            [/unpetrify]
        [/then]
        [else]
            [petrify]
                ability=AE_dep_idol_of_stone
                side=$side_number
            [/petrify]
            [heal_unit]
                [filter]
                    ability=AE_dep_idol_of_stone
                    side=$side_number
                [/filter]
                amount=10
                animate=no
                restore_statuses=no
            [/heal_unit]
        [/else]
    [/if]
[/event]

[+abilities]
#enddef
# wmllint: unbalanced-off

# wmllint: unbalanced-on
#define AE_DEP_ABILITY_HUNTER_ASPECT
    [dummy]
        id=AE_dep_hunterdum
        name="aspect of the hunter"
        special_note={AE_DEP_SPECIAL_NOTES_HUNTER}
        description=_ "Once this unit kills another unit, it will gain the 'hunter' weapon special, granting it additional damage against the race of the killed unit."
    [/dummy]
[/abilities]

[event]
    name=die
    first_time_only=no
    id=AE_dep_hunterdum_die
    [filter]
    [/filter]
    [filter_second]
        ability=AE_dep_hunterdum
    [/filter_second]

    [unstore_unit]
        variable=second_unit
        {COLOR_HARM}
        text= _ "The hunt is on!"
        find_vacant=no
    [/unstore_unit]

    [lua]
        code=<<wml.variables["display_race"] = wesnoth.races[wml.variables["unit.race"]].plural_name>>
    [/lua]

    [object]
        silent=yes
        [filter]
            x,y=$x2,$y2
        [/filter]
        [effect]
            apply_to=attack
            remove_specials=AE_dep_hunter
        [/effect]
        [effect]
            apply_to=attack
            range=melee
            [set_specials]
                mode=append
                {AE_DEP_WEAPON_SPECIAL_HUNTER $unit.race $display_race}
            [/set_specials]
        [/effect]
    [/object]
    {CLEAR_VARIABLE display_race}
[/event]

[+abilities]
#enddef
# wmllint: unbalanced-off

#define AE_DEP_WEAPON_SPECIAL_HUNTER RACE DISPLAYRACE
    [damage]
        id=AE_dep_hunter
        name= _ "hunting "+{DISPLAYRACE}
        description= _ "This unit deals +2 damage on offense against "+{DISPLAYRACE} + " (id={RACE})"
        add=2
        active_on=offense
        apply_to=attacker
        [filter_opponent]
            race={RACE}
        [/filter_opponent]
    [/damage]
#enddef
