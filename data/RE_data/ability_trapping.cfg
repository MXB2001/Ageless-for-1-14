#textdomain wesnoth-Rashy_Era

#activate when side unit moves next to trapping unit
#trapping unit is not uncovered, has no other enemies next to it and is in tile where it would be hidden
#primary unit is slowed
#ideally I wanted to filter

#define AE_RHY_APPLY_TRAP
    [event]
        #When enemy enters hex next to unit
        #Unit has trapping ability, is enemy, is invisible (not attacked, not discovered, in forest)
        name=enter_hex
        first_time_only=no
        id=AE_RHY_trapped
        [filter]
            x,y=$x1,$y1
            [filter_adjacent]
                ability=AE_RHY_trapping
                is_enemy=yes
                [not]
                    status=uncovered
                [/not]
                [not]
                    [filter_location]
                        [filter_adjacent_location]
                            #filters the hex unit has moved from. If it was next to trapping unit, the trapper will not attack again
                            x,y=$x2,$y2
                        [/filter_adjacent_location]
                    [/filter_location]
                [/not]
                [filter_location]
                    terrain=*^F*
                [/filter_location]
                [filter_adjacent]
                    is_enemy=yes
                    count=1
                [/filter_adjacent]
            [/filter_adjacent]
        [/filter]
        #we save all trapping units. if multiple are discovered in one move, they will all attack
        [store_unit]
            [filter]
                [filter_adjacent]
                    x,y=$x1,$y1
                [/filter_adjacent]
                [filter_adjacent]
                    is_enemy=yes
                    count=1
                [/filter_adjacent]
                ability=AE_RHY_trapping
                [not]
                    status=uncovered
                [/not]
                [not]
                    [filter_location]
                        [filter_adjacent_location]
                            x,y=$x2,$y2
                        [/filter_adjacent_location]
                    [/filter_location]
                [/not]
                [filter_location]
                    terrain=*^F*
                [/filter_location]
            [/filter]
            variable=AE_RHY_trapper_unit
            mode=append
        [/store_unit]
        {VARIABLE i 0}

        [while]
            [variable]
                name=i
                less_than=$AE_RHY_trapper_unit.length
            [/variable]
            [do]
                [set_variable]
                    name=AE_RHY_chance
                    rand=1..100
                [/set_variable]
                #store moving unit
                [store_unit]
                    variable=AE_RHY_trap_defender
                    [filter]
                        x,y=$x1,$y1
                    [/filter]
                [/store_unit]
                [store_unit_defense]
                    id=$AE_RHY_trap_defender.id
                    loc_x=$x1
                    loc_y=$y1
                    variable=AE_RHY_trap_defender_defense_var
                [/store_unit_defense]
                #store trapping unit, I would have liked to store the attack damage as well (in case of strong unit)
                [store_unit]
                    variable=AE_RHY_trap_attacker
                    [filter]
                        x=$AE_RHY_trapper_unit[$i].x
                        y=$AE_RHY_trapper_unit[$i].y
                    [/filter]
                [/store_unit]
                #If trapper hits, unit takes 10 chaotic pierce damage and is injured
                #Because the trap is unexpected, the hitchance is increased by 20%
                [if]
                    [variable]
                        name=AE_RHY_chance
                        less_than_equal_to=$AE_RHY_trap_defender_defense_var+20
                    [/variable]
                    [then]
                        [unstore_unit]
                            variable=AE_RHY_trap_attacker
                            find_vacant=no
                        [/unstore_unit]
                        [unstore_unit]
                            variable=AE_RHY_trap_defender
                            find_vacant=no
                        [/unstore_unit]
                        [harm_unit]
                            [filter]
                                x,y=$x1,$y1
                            [/filter]
                            [filter_second]
                                find_in=AE_RHY_trap_attacker
                            [/filter_second]
                            amount=10
                            alignment=chaotic
                            damage_type=pierce
                            animate=yes
                            experience=yes
                            fire_event=yes
                            [primary_attack]
                                name=trap
                            [/primary_attack]
                            #slowed=yes
                        [/harm_unit]
                        [modify_unit]
                            [filter]
                                x,y=$x1,$y1
                                [not]
                                    ability=AE_RHY_injured,AE_RHY_injured
                                [/not]
                            [/filter]
                            [effect]
                                apply_to=new_ability
                                [abilities]
                                    {AE_RHY_STATUS_INJURED}
                                [/abilities]
                            [/effect]
                        [/modify_unit]
                        [unit_overlay]
                            x,y=$x1,$y1
                            image="utils/injured.png"
                        [/unit_overlay]
                    [/then]
                    #In case of miss, animation is still played and exp distributed
                    [else]
                        [animate_unit]
                            flag=defend
                            [filter]
                                x,y=$x1,$y1
                            [/filter]
                            hits=no
                            [animate]
                                flag=attack
                                [filter]
                                    find_in=AE_RHY_trap_attacker
                                [/filter]
                                hits=no
                                [primary_attack]
                                    name=trap
                                [/primary_attack]
                                [facing]
                                    x,y=$x1,$y1
                                [/facing]
                            [/animate]
                        [/animate_unit]

                        {VARIABLE_OP AE_RHY_trap_defender.experience add $AE_RHY_trap_attacker.level}
                        [unstore_unit]
                            variable=AE_RHY_trap_defender
                            find_vacant=no
                        [/unstore_unit]
                        {VARIABLE_OP AE_RHY_trap_attacker.experience add $AE_RHY_trap_defender.level}
                        [unstore_unit]
                            variable=AE_RHY_trap_attacker
                            find_vacant=no
                        [/unstore_unit]
                    [/else]
                [/if]
                [set_variable]
                    name=i
                    add=1
                [/set_variable]
            [/do]
        [/while]
        {CLEAR_VARIABLE AE_RHY_trap_defender}
        {CLEAR_VARIABLE AE_RHY_trap_attacker}
        {CLEAR_VARIABLE AE_RHY_trapper_unit_loc}
        {CLEAR_VARIABLE AE_RHY_trapper_unit}
        {CLEAR_VARIABLE i}
    [/event]
#enddef

#define AE_RHY_ABILITY_TRAPPING
    [hides]
        id=AE_RHY_trapping
        alert="Trapped!"
        name= _ "Trapping"
        description= _ "This unit can hide in the forest. When this unit is discovered, it attacks the enemy once with the trap attack.
The attacks chance to hit is increased by 20%."
        special_note= _"This unit can hide in the forest and traps enemy units when they get in range."
        affect_self=yes
        [filter]
            [filter_location]
                terrain=*^F*
            [/filter_location]
        [/filter]
    [/hides]
#enddef
